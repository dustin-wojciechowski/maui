trigger:
  branches:
    include:
    - main
    - release/*
  tags:
    include:
    - '*'
  paths:
    include:
    - '*'
    exclude:
    - .github/*
    - docs/*
    - CODE-OF-CONDUCT.md
    - CONTRIBUTING.md
    - LICENSE.TXT
    - PATENTS.TXT
    - README.md
    - SECURITY.md
    - THIRD-PARTY-NOTICES.TXT


variables:
  - template: /eng/pipelines/common/variables.yml@self

parameters:
  - name: provisionatorChannel
    displayName: 'Provisionator channel'
    type: string
    default: 'latest'           # Support for launching a build against a Provisionator PR (e.g., pr/[github-account-name]/[pr-number]) as a means to test in-progress Provisionator changes

  - name: VM_IMAGE_HOST
    type: object
    default:
      name: AzurePipelines-EO
      image: 1ESPT-Windows2022
      os: windows

  - name: PackPlatform
    type: object
    default:
      name: Windows
      artifact: nuget

  - name: Skip1ESComplianceTasks
    default: false

resources:
  repositories:
    - repository: 1ESPipelineTemplates
      type: git
      name: 1ESPipelineTemplates/1ESPipelineTemplates
      ref: refs/tags/release

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    pool: ${{ parameters.VM_IMAGE_HOST }}
    sdl:
      ${{ if eq('${{ parameters.Skip1ESComplianceTasks }}', 'true') }}:
        enableAllTools: false
      binskim:
        scanOutputDirectoryOnly: true
      codeql:
        runSourceLanguagesInSourceAnalysis: true
      policheck:
        enabled: false
        justification: Built in task does not support multi-language scanning
      spotBugs:
        enabled: false
        justification: 'Failing with "Could not successfully find the java tool launcher"'
      sourceRepositoriesToScan:
        exclude:
        - repository: yaml-templates
      suppression:
        suppressionFile: $(Build.SourcesDirectory)\eng\automation\guardian\source.gdnsuppress
    stages:
      - stage: pack_net
        displayName: Pack .NET MAUI
        dependsOn: []
        jobs:
          - job: pack_net_${{ parameters.PackPlatform.name }}
            workspace:
              clean: all
            displayName: ${{ parameters.PackPlatform.name }}
            timeoutInMinutes: 240
           
            pool: ${{ parameters.VM_IMAGE_HOST }}
              
            templateContext:
              outputs:
                - output: pipelineArtifact
                  displayName: 'Publish the ${{ parameters.PackPlatform.artifact }} artifacts'
                  artifactName: ${{ parameters.PackPlatform.artifact }}
                  targetPath: '(Build.ArtifactStagingDirectory)'

            steps:
              - template: /eng/pipelines/common/pack.yml@self
                parameters:
                  platform: ${{ parameters.PackPlatform.name }}
                  provisionatorChannel: ${{ parameters.provisionatorChannel }}
                  artifact:  ${{ parameters.PackPlatform.artifact }}
                  artifactsPath: '(Build.ArtifactStagingDirectory)'